name: Build Plastimatch

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        arch: [x64, arm64]
      fail-fast: false
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup packaging variables
        run: |
          if [[ "${{ matrix.arch }}" == "arm64" ]]; then
            export CMAKE_ARCH="-DCMAKE_OSX_ARCHITECTURES=arm64"
          else
            export CMAKE_ARCH="-DCMAKE_OSX_ARCHITECTURES=x86_64"
          fi

      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y g++ make cmake git \
            libblas-dev liblapack-dev libsqlite3-dev \
            libdcmtk-dev libdlib-dev libfftw3-dev \
            libinsighttoolkit5-dev libpng-dev libtiff-dev uuid-dev zlib1g-dev

      - name: Install dependencies (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew update
          brew install cmake git dcmtk fftw itk libpng libtiff zlib

      - name: Configure CMake
        run: |
          cmake -S . -B build \
            -DCMAKE_BUILD_TYPE=Release \
            $CMAKE_ARCH

      - name: Build
        run: cmake --build build --config Release --parallel

      - name: Package binary
        run: |
          mkdir -p artifact
          BIN_DIR=build/bin
          cp $BIN_DIR/plastimatch* artifact/ || true
          cd artifact
          zip -r plastimatch-${{ matrix.os }}-${{ matrix.arch }}.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: plastimatch-${{ matrix.os }}-${{ matrix.arch }}
          path: artifact/plastimatch-*.zip
